---
# tasks file for postgresql

- name: 创建docker解压目录
  file:
    path: "{{ docker_app }}"
    state: directory

- name: 创建docker配置文件目录
  file:
    path: "{{ docker_daemon }}"
    state: directory

- name: 传送docker二进制包到主机
  copy:
    src: "{{ docker_package }}"
    dest: "{{ docker_dw }}"
    # 仅当目标目录不存在文件时才会传送文件
    force: no
    owner: root
    group: root

- name: 解压docker二进制包
  unarchive:
    src: "{{ docker_dw }}/{{ docker_package }}"
    dest: "{{ docker_app }}"
    owner: root
    group: root
    mode: '0751'
    # 表示文件如果已经存在，就不会继续上传
    keep_newer: yes
    remote_src: yes

- name: 拷贝docker二进制文件
  copy:
    src: "{{ docker_app }}/docker/"
    dest: "{{ docker_us }}"
    owner: root
    group: root
    mode: '0755'
    remote_src: yes

- name: 给docker二进制赋权限
  shell:
    cmd: |
      chmod -R 755 "{{ docker_us }}/{{ item }}"
  with_items:
    - containerd
    - containerd-shim
    - docker
    - ctr
    - dockerd
    - docker-init
    - docker-proxy
    - runc

- name: 添加daemon.json配置文件
  template:
    src: daemon.j2
    dest: "{{ docker_daemon }}/daemon.json"
    owner: root
    group: root
    mode: u=rwx,g=rx,o=rx
    output_encoding: utf-8

- name: 添加docker.service配置文件
  template:
    src: docker.service
    dest: "{{ docker_daemon }}/docker.service"
    owner: root
    group: root
    mode: u=rwx,g=rx,o=rx
    output_encoding: utf-8

- name: 添加docker.socket配置文件
  template:
    src: docker.socket
    dest: "{{ docker_daemon }}/docker.socket"
    owner: root
    group: root
    mode: u=rwx,g=rx,o=rx
    output_encoding: utf-8